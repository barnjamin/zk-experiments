{
    "hints": {
        "bootstrap": {
            "structs": {
                "vk": {
                    "name": "VerificationKey",
                    "elements": [
                        [
                            "alpha1",
                            "byte[32][2]"
                        ],
                        [
                            "beta2",
                            "byte[32][2][2]"
                        ],
                        [
                            "gamma2",
                            "byte[32][2][2]"
                        ],
                        [
                            "delta2",
                            "byte[32][2][2]"
                        ],
                        [
                            "IC",
                            "byte[32][2][2]"
                        ]
                    ]
                }
            }
        },
        "verify": {
            "structs": {
                "proof": {
                    "name": "Proof",
                    "elements": [
                        [
                            "A",
                            "byte[32][2]"
                        ],
                        [
                            "B",
                            "byte[32][2][2]"
                        ],
                        [
                            "C",
                            "byte[32][2]"
                        ]
                    ]
                }
            }
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDkKaW50Y2Jsb2NrIDAgMSA2NCA0NDgKYnl0ZWNibG9jayAweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwIDB4MzA2NDRlNzJlMTMxYTAyOWI4NTA0NWI2ODE4MTU4NWQ5NzgxNmE5MTY4NzFjYThkM2MyMDhjMTZkODdjZmQ0NyAweDc2NmIgMHgwNjgxMDEKdHhuIE51bUFwcEFyZ3MKaW50Y18wIC8vIDAKPT0KYm56IG1haW5fbDYKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMApwdXNoYnl0ZXMgMHg3OTNhZTQ0ZCAvLyAiYm9vdHN0cmFwKChieXRlWzMyXVsyXSxieXRlWzMyXVsyXVsyXSxieXRlWzMyXVsyXVsyXSxieXRlWzMyXVsyXVsyXSxieXRlWzMyXVsyXVsyXSkpdm9pZCIKPT0KYm56IG1haW5fbDUKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMApwdXNoYnl0ZXMgMHgzOTBjYjQ3NiAvLyAidmVyaWZ5KGJ5dGVbMzJdWzFdLChieXRlWzMyXVsyXSxieXRlWzMyXVsyXVsyXSxieXRlWzMyXVsyXSkpYm9vbCIKPT0KYm56IG1haW5fbDQKZXJyCm1haW5fbDQ6CnR4biBPbkNvbXBsZXRpb24KaW50Y18wIC8vIE5vT3AKPT0KdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKIT0KJiYKYXNzZXJ0CnR4bmEgQXBwbGljYXRpb25BcmdzIDEKc3RvcmUgMAp0eG5hIEFwcGxpY2F0aW9uQXJncyAyCnN0b3JlIDEKbG9hZCAwCmxvYWQgMQpjYWxsc3ViIHZlcmlmeV8xMwpzdG9yZSAyCnB1c2hieXRlcyAweDE1MWY3Yzc1IC8vIDB4MTUxZjdjNzUKcHVzaGJ5dGVzIDB4MDAgLy8gMHgwMAppbnRjXzAgLy8gMApsb2FkIDIKc2V0Yml0CmNvbmNhdApsb2cKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDU6CnR4biBPbkNvbXBsZXRpb24KaW50Y18wIC8vIE5vT3AKPT0KdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKIT0KJiYKYXNzZXJ0CnR4bmEgQXBwbGljYXRpb25BcmdzIDEKY2FsbHN1YiBib290c3RyYXBfMTIKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDY6CnR4biBPbkNvbXBsZXRpb24KaW50Y18wIC8vIE5vT3AKPT0KYm56IG1haW5fbDEwCnR4biBPbkNvbXBsZXRpb24KcHVzaGludCA0IC8vIFVwZGF0ZUFwcGxpY2F0aW9uCj09CmJueiBtYWluX2w5CmVycgptYWluX2w5Ogp0eG4gQXBwbGljYXRpb25JRAppbnRjXzAgLy8gMAohPQphc3NlcnQKY2FsbHN1YiB1cGRhdGVfMTAKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDEwOgp0eG4gQXBwbGljYXRpb25JRAppbnRjXzAgLy8gMAo9PQphc3NlcnQKY2FsbHN1YiBjcmVhdGVfMAppbnRjXzEgLy8gMQpyZXR1cm4KCi8vIGNyZWF0ZQpjcmVhdGVfMDoKaW50Y18xIC8vIDEKcmV0dXJuCgovLyBhZGQKYWRkXzE6CmNhbGxzdWIgY3VydmVhZGRfNgpyZXRzdWIKCi8vIHNjYWxlCnNjYWxlXzI6CmNhbGxzdWIgY3VydmVzY2FsYXJtdWxfNwpyZXRzdWIKCi8vIG5lZ2F0ZQpuZWdhdGVfMzoKc3RvcmUgMjkKbG9hZCAyOQpieXRlY18wIC8vIDB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAKYj09CmJueiBuZWdhdGVfM19sMgpsb2FkIDI5CmV4dHJhY3QgMCAzMgpieXRlY18xIC8vIDB4MzA2NDRlNzJlMTMxYTAyOWI4NTA0NWI2ODE4MTU4NWQ5NzgxNmE5MTY4NzFjYThkM2MyMDhjMTZkODdjZmQ0Nwpsb2FkIDI5CmV4dHJhY3QgMzIgMApieXRlY18xIC8vIDB4MzA2NDRlNzJlMTMxYTAyOWI4NTA0NWI2ODE4MTU4NWQ5NzgxNmE5MTY4NzFjYThkM2MyMDhjMTZkODdjZmQ0NwpiJQpiLQpjb25jYXQKYiBuZWdhdGVfM19sMwpuZWdhdGVfM19sMjoKbG9hZCAyOQpuZWdhdGVfM19sMzoKcmV0c3ViCgovLyBjb21wdXRlX2xpbmVhcl9jb21iaW5hdGlvbgpjb21wdXRlbGluZWFyY29tYmluYXRpb25fNDoKc3RvcmUgMTIKc3RvcmUgMTEKYnl0ZWNfMCAvLyAweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwCnN0b3JlIDE0CmxvYWQgMTEKaW50Y18zIC8vIDQ0OApkaWcgMQpsZW4Kc3Vic3RyaW5nMwpzdG9yZSAxNQpwdXNoaW50IDIgLy8gMgppbnRjXzEgLy8gMQotCmludGNfMSAvLyAxCj09CmFzc2VydAppbnRjXzAgLy8gMApzdG9yZSAxNgpjb21wdXRlbGluZWFyY29tYmluYXRpb25fNF9sMToKbG9hZCAxNgppbnRjXzEgLy8gMQo8CmJ6IGNvbXB1dGVsaW5lYXJjb21iaW5hdGlvbl80X2wzCmxvYWQgMTIKcHVzaGludCAzMiAvLyAzMgpsb2FkIDE2CioKcHVzaGludCAzMiAvLyAzMgpleHRyYWN0MwpzdG9yZSAxNwpsb2FkIDE3CnB1c2hieXRlcyAweDMwNjQ0ZTcyZTEzMWEwMjliODUwNDViNjgxODE1ODVkMjgzM2U4NDg3OWI5NzA5MTQzZTFmNTkzZjAwMDAwMDEgLy8gMHgzMDY0NGU3MmUxMzFhMDI5Yjg1MDQ1YjY4MTgxNTg1ZDI4MzNlODQ4NzliOTcwOTE0M2UxZjU5M2YwMDAwMDAxCmI8Ci8vIGlucHV0ID49IHNuYXJrIHNjYWxhcgphc3NlcnQKbG9hZCAxMQppbnRjXzMgLy8gNDQ4CmRpZyAxCmxlbgpzdWJzdHJpbmczCmludGNfMiAvLyA2NApsb2FkIDE2CmludGNfMSAvLyAxCisKKgppbnRjXzIgLy8gNjQKZXh0cmFjdDMKbG9hZCAxNwpjYWxsc3ViIHNjYWxlXzIKc3RvcmUgMTMKbG9hZCAxNApsb2FkIDEzCmNhbGxzdWIgYWRkXzEKc3RvcmUgMTQKbG9hZCAxNgppbnRjXzEgLy8gMQorCnN0b3JlIDE2CmIgY29tcHV0ZWxpbmVhcmNvbWJpbmF0aW9uXzRfbDEKY29tcHV0ZWxpbmVhcmNvbWJpbmF0aW9uXzRfbDM6CmxvYWQgMTEKaW50Y18zIC8vIDQ0OApkaWcgMQpsZW4Kc3Vic3RyaW5nMwppbnRjXzIgLy8gNjQKaW50Y18wIC8vIDAKKgppbnRjXzIgLy8gNjQKZXh0cmFjdDMKc3RvcmUgMTgKbG9hZCAxNApsb2FkIDE4CmNhbGxzdWIgYWRkXzEKc3RvcmUgMTQKbG9hZCAxNApyZXRzdWIKCi8vIHZhbGlkX3BhaXJpbmcKdmFsaWRwYWlyaW5nXzU6CnN0b3JlIDIxCnN0b3JlIDIwCnN0b3JlIDE5CmxvYWQgMTkKZXh0cmFjdCAwIDY0CmNhbGxzdWIgbmVnYXRlXzMKc3RvcmUgMjIKbG9hZCAyMApleHRyYWN0IDAgNjQKc3RvcmUgMjQKbG9hZCAyMgpsb2FkIDI0CmNvbmNhdApzdG9yZSAyMgpsb2FkIDIyCmxvYWQgMjEKY29uY2F0CnN0b3JlIDIyCmxvYWQgMTkKZXh0cmFjdCAxOTIgMApzdG9yZSAyNQpsb2FkIDIyCmxvYWQgMjUKY29uY2F0CnN0b3JlIDIyCmxvYWQgMTkKZXh0cmFjdCA2NCAxMjgKc3RvcmUgMjMKbG9hZCAyMApleHRyYWN0IDY0IDEyOApzdG9yZSAyNgpsb2FkIDIzCmxvYWQgMjYKY29uY2F0CnN0b3JlIDIzCmxvYWQgMjAKZXh0cmFjdCAxOTIgMTI4CnN0b3JlIDI3CmxvYWQgMjMKbG9hZCAyNwpjb25jYXQKc3RvcmUgMjMKbG9hZCAyMApwdXNoaW50IDMyMCAvLyAzMjAKcHVzaGludCAxMjggLy8gMTI4CmV4dHJhY3QzCnN0b3JlIDI4CmxvYWQgMjMKbG9hZCAyOApjb25jYXQKc3RvcmUgMjMKbG9hZCAyMgpsb2FkIDIzCmNhbGxzdWIgY3VydmVwYWlyaW5nXzgKcmV0c3ViCgovLyBjdXJ2ZV9hZGQKY3VydmVhZGRfNjoKZWNfYWRkIEJOMjU0X0cxCnJldHN1YgoKLy8gY3VydmVfc2NhbGFyX211bApjdXJ2ZXNjYWxhcm11bF83OgplY19zY2FsYXJfbXVsIEJOMjU0X0cxCnJldHN1YgoKLy8gY3VydmVfcGFpcmluZwpjdXJ2ZXBhaXJpbmdfODoKZWNfcGFpcmluZ19jaGVjayBCTjI1NF9HMQpyZXRzdWIKCi8vIGF1dGhfb25seQphdXRob25seV85OgpnbG9iYWwgQ3JlYXRvckFkZHJlc3MKPT0KcmV0c3ViCgovLyB1cGRhdGUKdXBkYXRlXzEwOgp0eG4gU2VuZGVyCmNhbGxzdWIgYXV0aG9ubHlfOQovLyB1bmF1dGhvcml6ZWQKYXNzZXJ0CmludGNfMSAvLyAxCnJldHVybgoKLy8gYXV0aF9vbmx5CmF1dGhvbmx5XzExOgpnbG9iYWwgQ3JlYXRvckFkZHJlc3MKPT0KcmV0c3ViCgovLyBib290c3RyYXAKYm9vdHN0cmFwXzEyOgpzdG9yZSAxMAp0eG4gU2VuZGVyCmNhbGxzdWIgYXV0aG9ubHlfMTEKLy8gdW5hdXRob3JpemVkCmFzc2VydApieXRlY18yIC8vICJ2ayIKbG9hZCAxMApib3hfcHV0CnJldHN1YgoKLy8gdmVyaWZ5CnZlcmlmeV8xMzoKc3RvcmUgNApzdG9yZSAzCnB1c2hpbnQgMTM1MCAvLyAxMzUwCnB1c2hpbnQgMTAgLy8gMTAKKwpzdG9yZSA1CnZlcmlmeV8xM19sMToKbG9hZCA1Cmdsb2JhbCBPcGNvZGVCdWRnZXQKPgpieiB2ZXJpZnlfMTNfbDMKaXR4bl9iZWdpbgpwdXNoaW50IDYgLy8gYXBwbAppdHhuX2ZpZWxkIFR5cGVFbnVtCnB1c2hpbnQgNSAvLyBEZWxldGVBcHBsaWNhdGlvbgppdHhuX2ZpZWxkIE9uQ29tcGxldGlvbgpieXRlY18zIC8vIDB4MDY4MTAxCml0eG5fZmllbGQgQXBwcm92YWxQcm9ncmFtCmJ5dGVjXzMgLy8gMHgwNjgxMDEKaXR4bl9maWVsZCBDbGVhclN0YXRlUHJvZ3JhbQppdHhuX3N1Ym1pdApiIHZlcmlmeV8xM19sMQp2ZXJpZnlfMTNfbDM6CmJ5dGVjXzIgLy8gInZrIgpib3hfZ2V0CnN0b3JlIDgKc3RvcmUgNwpsb2FkIDgKLy8gVmVyaWZpY2F0aW9uIEtleSBub3Qgc2V0CmFzc2VydApsb2FkIDcKc3RvcmUgNgpsb2FkIDYKbG9hZCAzCmNhbGxzdWIgY29tcHV0ZWxpbmVhcmNvbWJpbmF0aW9uXzQKc3RvcmUgOQpsb2FkIDQKbG9hZCA2CmxvYWQgOQpjYWxsc3ViIHZhbGlkcGFpcmluZ181CiEKIQpyZXRzdWI=",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDkKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "schema": {
        "local": {
            "declared": {},
            "reserved": {}
        },
        "global": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "Verifier",
        "methods": [
            {
                "name": "bootstrap",
                "args": [
                    {
                        "type": "(byte[32][2],byte[32][2][2],byte[32][2][2],byte[32][2][2],byte[32][2][2])",
                        "name": "vk"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "verify",
                "args": [
                    {
                        "type": "byte[32][1]",
                        "name": "inputs"
                    },
                    {
                        "type": "(byte[32][2],byte[32][2][2],byte[32][2])",
                        "name": "proof"
                    }
                ],
                "returns": {
                    "type": "bool"
                }
            }
        ],
        "networks": {}
    }
}