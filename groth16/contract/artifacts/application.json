{
    "hints": {
        "bootstrap": {
            "structs": {
                "vk": {
                    "name": "VerificationKey",
                    "elements": [
                        [
                            "alpha1",
                            "byte[32][2]"
                        ],
                        [
                            "beta2",
                            "byte[32][2][2]"
                        ],
                        [
                            "gamma2",
                            "byte[32][2][2]"
                        ],
                        [
                            "delta2",
                            "byte[32][2][2]"
                        ],
                        [
                            "IC",
                            "byte[32][2][2]"
                        ]
                    ]
                }
            }
        },
        "verify": {
            "structs": {
                "proof": {
                    "name": "Proof",
                    "elements": [
                        [
                            "A",
                            "byte[32][2]"
                        ],
                        [
                            "B",
                            "byte[32][2][2]"
                        ],
                        [
                            "C",
                            "byte[32][2]"
                        ]
                    ]
                }
            }
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDkKaW50Y2Jsb2NrIDAgMSA0NDgKYnl0ZWNibG9jayAweDMwNjQ0ZTcyZTEzMWEwMjliODUwNDViNjgxODE1ODVkOTc4MTZhOTE2ODcxY2E4ZDNjMjA4YzE2ZDg3Y2ZkNDcgMHg3NjZiIDB4MDY4MTAxCnR4biBOdW1BcHBBcmdzCmludGNfMCAvLyAwCj09CmJueiBtYWluX2w2CnR4bmEgQXBwbGljYXRpb25BcmdzIDAKcHVzaGJ5dGVzIDB4NzkzYWU0NGQgLy8gImJvb3RzdHJhcCgoYnl0ZVszMl1bMl0sYnl0ZVszMl1bMl1bMl0sYnl0ZVszMl1bMl1bMl0sYnl0ZVszMl1bMl1bMl0sYnl0ZVszMl1bMl1bMl0pKXZvaWQiCj09CmJueiBtYWluX2w1CnR4bmEgQXBwbGljYXRpb25BcmdzIDAKcHVzaGJ5dGVzIDB4MzkwY2I0NzYgLy8gInZlcmlmeShieXRlWzMyXVsxXSwoYnl0ZVszMl1bMl0sYnl0ZVszMl1bMl1bMl0sYnl0ZVszMl1bMl0pKWJvb2wiCj09CmJueiBtYWluX2w0CmVycgptYWluX2w0Ogp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CiYmCmFzc2VydAp0eG5hIEFwcGxpY2F0aW9uQXJncyAxCnN0b3JlIDAKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMgpzdG9yZSAxCmxvYWQgMApsb2FkIDEKY2FsbHN1YiB2ZXJpZnlfMTEKc3RvcmUgMgpwdXNoYnl0ZXMgMHgxNTFmN2M3NSAvLyAweDE1MWY3Yzc1CnB1c2hieXRlcyAweDAwIC8vIDB4MDAKaW50Y18wIC8vIDAKbG9hZCAyCnNldGJpdApjb25jYXQKbG9nCmludGNfMSAvLyAxCnJldHVybgptYWluX2w1Ogp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CiYmCmFzc2VydAp0eG5hIEFwcGxpY2F0aW9uQXJncyAxCmNhbGxzdWIgYm9vdHN0cmFwXzEwCmludGNfMSAvLyAxCnJldHVybgptYWluX2w2Ogp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CmJueiBtYWluX2wxMAp0eG4gT25Db21wbGV0aW9uCnB1c2hpbnQgNCAvLyBVcGRhdGVBcHBsaWNhdGlvbgo9PQpibnogbWFpbl9sOQplcnIKbWFpbl9sOToKdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKIT0KYXNzZXJ0CmNhbGxzdWIgdXBkYXRlXzgKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDEwOgp0eG4gQXBwbGljYXRpb25JRAppbnRjXzAgLy8gMAo9PQphc3NlcnQKY2FsbHN1YiBjcmVhdGVfMAppbnRjXzEgLy8gMQpyZXR1cm4KCi8vIGNyZWF0ZQpjcmVhdGVfMDoKaW50Y18xIC8vIDEKcmV0dXJuCgovLyBuZWdhdGUKbmVnYXRlXzE6CnN0b3JlIDE4CmxvYWQgMTgKZXh0cmFjdCAwIDMyCmJ5dGVjXzAgLy8gMHgzMDY0NGU3MmUxMzFhMDI5Yjg1MDQ1YjY4MTgxNTg1ZDk3ODE2YTkxNjg3MWNhOGQzYzIwOGMxNmQ4N2NmZDQ3CmxvYWQgMTgKZXh0cmFjdCAzMiAwCmJ5dGVjXzAgLy8gMHgzMDY0NGU3MmUxMzFhMDI5Yjg1MDQ1YjY4MTgxNTg1ZDk3ODE2YTkxNjg3MWNhOGQzYzIwOGMxNmQ4N2NmZDQ3CmIlCmItCmNvbmNhdApyZXRzdWIKCi8vIGNvbXB1dGVfbGluZWFyX2NvbWJpbmF0aW9uCmNvbXB1dGVsaW5lYXJjb21iaW5hdGlvbl8yOgpzdG9yZSAxMgpzdG9yZSAxMQpsb2FkIDExCmludGNfMiAvLyA0NDgKZGlnIDEKbGVuCnN1YnN0cmluZzMKZXh0cmFjdCA2NCAwCmxvYWQgMTIKY2FsbHN1YiBjdXJ2ZW11bHRpZXhwXzUKbG9hZCAxMQppbnRjXzIgLy8gNDQ4CmRpZyAxCmxlbgpzdWJzdHJpbmczCmV4dHJhY3QgMCA2NApjYWxsc3ViIGN1cnZlYWRkXzQKcmV0c3ViCgovLyB2YWxpZF9wYWlyaW5nCnZhbGlkcGFpcmluZ18zOgpzdG9yZSAxNQpzdG9yZSAxNApzdG9yZSAxMwpsb2FkIDEzCmV4dHJhY3QgMCA2NApjYWxsc3ViIG5lZ2F0ZV8xCmxvYWQgMTQKZXh0cmFjdCAwIDY0CmNvbmNhdApsb2FkIDE1CmNvbmNhdApsb2FkIDEzCmV4dHJhY3QgMTkyIDAKY29uY2F0CnN0b3JlIDE2CmxvYWQgMTMKZXh0cmFjdCA2NCAxMjgKbG9hZCAxNApleHRyYWN0IDY0IDEyOApjb25jYXQKbG9hZCAxNApleHRyYWN0IDE5MiAxMjgKY29uY2F0CmxvYWQgMTQKcHVzaGludCAzMjAgLy8gMzIwCnB1c2hpbnQgMTI4IC8vIDEyOApleHRyYWN0Mwpjb25jYXQKc3RvcmUgMTcKbG9hZCAxNgpsb2FkIDE3CmNhbGxzdWIgY3VydmVwYWlyaW5nXzYKcmV0c3ViCgovLyBjdXJ2ZV9hZGQKY3VydmVhZGRfNDoKZWNfYWRkIEJOMjU0X0cxCnJldHN1YgoKLy8gY3VydmVfbXVsdGlfZXhwCmN1cnZlbXVsdGlleHBfNToKZWNfbXVsdGlfZXhwIEJOMjU0X0cxCnJldHN1YgoKLy8gY3VydmVfcGFpcmluZwpjdXJ2ZXBhaXJpbmdfNjoKZWNfcGFpcmluZ19jaGVjayBCTjI1NF9HMQpyZXRzdWIKCi8vIGF1dGhfb25seQphdXRob25seV83OgpnbG9iYWwgQ3JlYXRvckFkZHJlc3MKPT0KcmV0c3ViCgovLyB1cGRhdGUKdXBkYXRlXzg6CnR4biBTZW5kZXIKY2FsbHN1YiBhdXRob25seV83Ci8vIHVuYXV0aG9yaXplZAphc3NlcnQKaW50Y18xIC8vIDEKcmV0dXJuCgovLyBhdXRoX29ubHkKYXV0aG9ubHlfOToKZ2xvYmFsIENyZWF0b3JBZGRyZXNzCj09CnJldHN1YgoKLy8gYm9vdHN0cmFwCmJvb3RzdHJhcF8xMDoKc3RvcmUgMTAKdHhuIFNlbmRlcgpjYWxsc3ViIGF1dGhvbmx5XzkKLy8gdW5hdXRob3JpemVkCmFzc2VydApieXRlY18xIC8vICJ2ayIKbG9hZCAxMApib3hfcHV0CnJldHN1YgoKLy8gdmVyaWZ5CnZlcmlmeV8xMToKc3RvcmUgNApzdG9yZSAzCnB1c2hpbnQgMTM1MDAgLy8gMTM1MDAKcHVzaGludCAxMCAvLyAxMAorCnN0b3JlIDUKdmVyaWZ5XzExX2wxOgpsb2FkIDUKZ2xvYmFsIE9wY29kZUJ1ZGdldAo+CmJ6IHZlcmlmeV8xMV9sMwppdHhuX2JlZ2luCnB1c2hpbnQgNiAvLyBhcHBsCml0eG5fZmllbGQgVHlwZUVudW0KcHVzaGludCA1IC8vIERlbGV0ZUFwcGxpY2F0aW9uCml0eG5fZmllbGQgT25Db21wbGV0aW9uCmJ5dGVjXzIgLy8gMHgwNjgxMDEKaXR4bl9maWVsZCBBcHByb3ZhbFByb2dyYW0KYnl0ZWNfMiAvLyAweDA2ODEwMQppdHhuX2ZpZWxkIENsZWFyU3RhdGVQcm9ncmFtCml0eG5fc3VibWl0CmIgdmVyaWZ5XzExX2wxCnZlcmlmeV8xMV9sMzoKYnl0ZWNfMSAvLyAidmsiCmJveF9nZXQKc3RvcmUgOApzdG9yZSA3CmxvYWQgOAovLyBWZXJpZmljYXRpb24gS2V5IG5vdCBzZXQKYXNzZXJ0CmxvYWQgNwpzdG9yZSA2CmxvYWQgNgpsb2FkIDMKY2FsbHN1YiBjb21wdXRlbGluZWFyY29tYmluYXRpb25fMgpzdG9yZSA5CmxvYWQgNApsb2FkIDYKbG9hZCA5CmNhbGxzdWIgdmFsaWRwYWlyaW5nXzMKIQohCnJldHN1Yg==",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDkKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "schema": {
        "local": {
            "declared": {},
            "reserved": {}
        },
        "global": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "Verifier",
        "methods": [
            {
                "name": "bootstrap",
                "args": [
                    {
                        "type": "(byte[32][2],byte[32][2][2],byte[32][2][2],byte[32][2][2],byte[32][2][2])",
                        "name": "vk"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "verify",
                "args": [
                    {
                        "type": "byte[32][1]",
                        "name": "inputs"
                    },
                    {
                        "type": "(byte[32][2],byte[32][2][2],byte[32][2])",
                        "name": "proof"
                    }
                ],
                "returns": {
                    "type": "bool"
                }
            }
        ],
        "networks": {}
    }
}