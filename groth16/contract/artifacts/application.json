{
    "hints": {
        "bootstrap": {
            "structs": {
                "vk": {
                    "name": "VerificationKey",
                    "elements": [
                        [
                            "alpha1",
                            "byte[48][2]"
                        ],
                        [
                            "beta2",
                            "byte[48][2][2]"
                        ],
                        [
                            "gamma2",
                            "byte[48][2][2]"
                        ],
                        [
                            "delta2",
                            "byte[48][2][2]"
                        ],
                        [
                            "IC",
                            "byte[48][2][2]"
                        ]
                    ]
                }
            }
        },
        "verify": {
            "structs": {
                "proof": {
                    "name": "Proof",
                    "elements": [
                        [
                            "A",
                            "byte[48][2]"
                        ],
                        [
                            "B",
                            "byte[48][2][2]"
                        ],
                        [
                            "C",
                            "byte[48][2]"
                        ]
                    ]
                }
            }
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDkKaW50Y2Jsb2NrIDAgMSA2NzIgMjg4IDE5MgpieXRlY2Jsb2NrIDB4MWEwMTExZWEzOTdmZTY5YTRiMWJhN2I2NDM0YmFjZDc2NDc3NGI4NGYzODUxMmJmNjczMGQyYTBmNmIwZjYyNDFlYWJmZmZlYjE1M2ZmZmZiOWZlZmZmZmZmZmZhYWFiIDB4NzY2YiAweDA2ODEwMQp0eG4gTnVtQXBwQXJncwppbnRjXzAgLy8gMAo9PQpibnogbWFpbl9sNgp0eG5hIEFwcGxpY2F0aW9uQXJncyAwCnB1c2hieXRlcyAweDMzNjNkMmQ3IC8vICJib290c3RyYXAoKGJ5dGVbNDhdWzJdLGJ5dGVbNDhdWzJdWzJdLGJ5dGVbNDhdWzJdWzJdLGJ5dGVbNDhdWzJdWzJdLGJ5dGVbNDhdWzJdWzJdKSl2b2lkIgo9PQpibnogbWFpbl9sNQp0eG5hIEFwcGxpY2F0aW9uQXJncyAwCnB1c2hieXRlcyAweDljNTUwYjQzIC8vICJ2ZXJpZnkoYnl0ZVszMl1bMV0sKGJ5dGVbNDhdWzJdLGJ5dGVbNDhdWzJdWzJdLGJ5dGVbNDhdWzJdKSlib29sIgo9PQpibnogbWFpbl9sNAplcnIKbWFpbl9sNDoKdHhuIE9uQ29tcGxldGlvbgppbnRjXzAgLy8gTm9PcAo9PQp0eG4gQXBwbGljYXRpb25JRAppbnRjXzAgLy8gMAohPQomJgphc3NlcnQKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQpzdG9yZSA4CnR4bmEgQXBwbGljYXRpb25BcmdzIDIKc3RvcmUgOQpsb2FkIDgKbG9hZCA5CmNhbGxzdWIgdmVyaWZ5XzExCnN0b3JlIDEwCnB1c2hieXRlcyAweDE1MWY3Yzc1IC8vIDB4MTUxZjdjNzUKcHVzaGJ5dGVzIDB4MDAgLy8gMHgwMAppbnRjXzAgLy8gMApsb2FkIDEwCnNldGJpdApjb25jYXQKbG9nCmludGNfMSAvLyAxCnJldHVybgptYWluX2w1Ogp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CiYmCmFzc2VydAp0eG5hIEFwcGxpY2F0aW9uQXJncyAxCmNhbGxzdWIgYm9vdHN0cmFwXzEwCmludGNfMSAvLyAxCnJldHVybgptYWluX2w2Ogp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CmJueiBtYWluX2wxMAp0eG4gT25Db21wbGV0aW9uCnB1c2hpbnQgNCAvLyBVcGRhdGVBcHBsaWNhdGlvbgo9PQpibnogbWFpbl9sOQplcnIKbWFpbl9sOToKdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKIT0KYXNzZXJ0CmNhbGxzdWIgdXBkYXRlXzgKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDEwOgp0eG4gQXBwbGljYXRpb25JRAppbnRjXzAgLy8gMAo9PQphc3NlcnQKY2FsbHN1YiBjcmVhdGVfMAppbnRjXzEgLy8gMQpyZXR1cm4KCi8vIGNyZWF0ZQpjcmVhdGVfMDoKaW50Y18xIC8vIDEKcmV0dXJuCgovLyBuZWdhdGUKbmVnYXRlXzE6CnN0b3JlIDcKbG9hZCA3CmV4dHJhY3QgMCA0OApieXRlY18wIC8vIDB4MWEwMTExZWEzOTdmZTY5YTRiMWJhN2I2NDM0YmFjZDc2NDc3NGI4NGYzODUxMmJmNjczMGQyYTBmNmIwZjYyNDFlYWJmZmZlYjE1M2ZmZmZiOWZlZmZmZmZmZmZhYWFiCmxvYWQgNwpleHRyYWN0IDQ4IDAKYnl0ZWNfMCAvLyAweDFhMDExMWVhMzk3ZmU2OWE0YjFiYTdiNjQzNGJhY2Q3NjQ3NzRiODRmMzg1MTJiZjY3MzBkMmEwZjZiMGY2MjQxZWFiZmZmZWIxNTNmZmZmYjlmZWZmZmZmZmZmYWFhYgpiJQpiLQpjb25jYXQKcmV0c3ViCgovLyBjb21wdXRlX2xpbmVhcl9jb21iaW5hdGlvbgpjb21wdXRlbGluZWFyY29tYmluYXRpb25fMjoKc3RvcmUgMQpzdG9yZSAwCmxvYWQgMAppbnRjXzIgLy8gNjcyCmRpZyAxCmxlbgpzdWJzdHJpbmczCmV4dHJhY3QgOTYgMApsb2FkIDEKY2FsbHN1YiBjdXJ2ZW11bHRpZXhwXzUKbG9hZCAwCmludGNfMiAvLyA2NzIKZGlnIDEKbGVuCnN1YnN0cmluZzMKZXh0cmFjdCAwIDk2CmNhbGxzdWIgY3VydmVhZGRfNApyZXRzdWIKCi8vIHZhbGlkX3BhaXJpbmcKdmFsaWRwYWlyaW5nXzM6CnN0b3JlIDQKc3RvcmUgMwpzdG9yZSAyCmxvYWQgMgpleHRyYWN0IDAgOTYKY2FsbHN1YiBuZWdhdGVfMQpsb2FkIDMKZXh0cmFjdCAwIDk2CmNvbmNhdApsb2FkIDQKY29uY2F0CmxvYWQgMgppbnRjXzMgLy8gMjg4CmRpZyAxCmxlbgpzdWJzdHJpbmczCmNvbmNhdApzdG9yZSA1CmxvYWQgMgpleHRyYWN0IDk2IDE5Mgpsb2FkIDMKZXh0cmFjdCA5NiAxOTIKY29uY2F0CmxvYWQgMwppbnRjXzMgLy8gMjg4CmludGMgNCAvLyAxOTIKZXh0cmFjdDMKY29uY2F0CmxvYWQgMwpwdXNoaW50IDQ4MCAvLyA0ODAKaW50YyA0IC8vIDE5MgpleHRyYWN0Mwpjb25jYXQKc3RvcmUgNgpsb2FkIDUKbG9hZCA2CmNhbGxzdWIgY3VydmVwYWlyaW5nXzYKcmV0c3ViCgovLyBjdXJ2ZV9hZGQKY3VydmVhZGRfNDoKZWNfYWRkIEJMUzEyXzM4MV9HMQpyZXRzdWIKCi8vIGN1cnZlX211bHRpX2V4cApjdXJ2ZW11bHRpZXhwXzU6CmVjX211bHRpX2V4cCBCTFMxMl8zODFfRzEKcmV0c3ViCgovLyBjdXJ2ZV9wYWlyaW5nCmN1cnZlcGFpcmluZ182OgplY19wYWlyaW5nX2NoZWNrIEJMUzEyXzM4MV9HMQpyZXRzdWIKCi8vIGF1dGhfb25seQphdXRob25seV83OgpnbG9iYWwgQ3JlYXRvckFkZHJlc3MKPT0KcmV0c3ViCgovLyB1cGRhdGUKdXBkYXRlXzg6CnR4biBTZW5kZXIKY2FsbHN1YiBhdXRob25seV83Ci8vIHVuYXV0aG9yaXplZAphc3NlcnQKaW50Y18xIC8vIDEKcmV0dXJuCgovLyBhdXRoX29ubHkKYXV0aG9ubHlfOToKZ2xvYmFsIENyZWF0b3JBZGRyZXNzCj09CnJldHN1YgoKLy8gYm9vdHN0cmFwCmJvb3RzdHJhcF8xMDoKc3RvcmUgMTgKdHhuIFNlbmRlcgpjYWxsc3ViIGF1dGhvbmx5XzkKLy8gdW5hdXRob3JpemVkCmFzc2VydApieXRlY18xIC8vICJ2ayIKbG9hZCAxOApib3hfcHV0CnJldHN1YgoKLy8gdmVyaWZ5CnZlcmlmeV8xMToKc3RvcmUgMTIKc3RvcmUgMTEKcHVzaGludCAxMzUwMCAvLyAxMzUwMApwdXNoaW50IDEwIC8vIDEwCisKc3RvcmUgMTMKdmVyaWZ5XzExX2wxOgpsb2FkIDEzCmdsb2JhbCBPcGNvZGVCdWRnZXQKPgpieiB2ZXJpZnlfMTFfbDMKaXR4bl9iZWdpbgpwdXNoaW50IDYgLy8gYXBwbAppdHhuX2ZpZWxkIFR5cGVFbnVtCnB1c2hpbnQgNSAvLyBEZWxldGVBcHBsaWNhdGlvbgppdHhuX2ZpZWxkIE9uQ29tcGxldGlvbgpieXRlY18yIC8vIDB4MDY4MTAxCml0eG5fZmllbGQgQXBwcm92YWxQcm9ncmFtCmJ5dGVjXzIgLy8gMHgwNjgxMDEKaXR4bl9maWVsZCBDbGVhclN0YXRlUHJvZ3JhbQppdHhuX3N1Ym1pdApiIHZlcmlmeV8xMV9sMQp2ZXJpZnlfMTFfbDM6CmJ5dGVjXzEgLy8gInZrIgpib3hfZ2V0CnN0b3JlIDE2CnN0b3JlIDE1CmxvYWQgMTYKLy8gVmVyaWZpY2F0aW9uIEtleSBub3Qgc2V0CmFzc2VydApsb2FkIDE1CnN0b3JlIDE0CmxvYWQgMTQKbG9hZCAxMQpjYWxsc3ViIGNvbXB1dGVsaW5lYXJjb21iaW5hdGlvbl8yCnN0b3JlIDE3CmxvYWQgMTIKbG9hZCAxNApsb2FkIDE3CmNhbGxzdWIgdmFsaWRwYWlyaW5nXzMKIQohCnJldHN1Yg==",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDkKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "schema": {
        "local": {
            "declared": {},
            "reserved": {}
        },
        "global": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "Verifier",
        "methods": [
            {
                "name": "bootstrap",
                "args": [
                    {
                        "type": "(byte[48][2],byte[48][2][2],byte[48][2][2],byte[48][2][2],byte[48][2][2])",
                        "name": "vk"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "verify",
                "args": [
                    {
                        "type": "byte[32][1]",
                        "name": "inputs"
                    },
                    {
                        "type": "(byte[48][2],byte[48][2][2],byte[48][2])",
                        "name": "proof"
                    }
                ],
                "returns": {
                    "type": "bool"
                }
            }
        ],
        "networks": {}
    }
}