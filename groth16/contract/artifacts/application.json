{
    "hints": {
        "bootstrap": {
            "structs": {
                "vk": {
                    "name": "VerificationKey",
                    "elements": [
                        [
                            "alpha1",
                            "byte[32][2]"
                        ],
                        [
                            "beta2",
                            "byte[32][2][2]"
                        ],
                        [
                            "gamma2",
                            "byte[32][2][2]"
                        ],
                        [
                            "delta2",
                            "byte[32][2][2]"
                        ],
                        [
                            "IC",
                            "byte[32][2][2]"
                        ]
                    ]
                }
            }
        },
        "verify": {
            "structs": {
                "proof": {
                    "name": "Proof",
                    "elements": [
                        [
                            "A",
                            "byte[32][2]"
                        ],
                        [
                            "B",
                            "byte[32][2][2]"
                        ],
                        [
                            "C",
                            "byte[32][2]"
                        ]
                    ]
                }
            }
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDkKaW50Y2Jsb2NrIDAgMSA2NCA0NDgKYnl0ZWNibG9jayAweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwIDB4MzA2NDRlNzJlMTMxYTAyOWI4NTA0NWI2ODE4MTU4NWQ5NzgxNmE5MTY4NzFjYThkM2MyMDhjMTZkODdjZmQ0NyAweDc2NmIgMHgwNjgxMDEKdHhuIE51bUFwcEFyZ3MKaW50Y18wIC8vIDAKPT0KYm56IG1haW5fbDYKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMApwdXNoYnl0ZXMgMHg3OTNhZTQ0ZCAvLyAiYm9vdHN0cmFwKChieXRlWzMyXVsyXSxieXRlWzMyXVsyXVsyXSxieXRlWzMyXVsyXVsyXSxieXRlWzMyXVsyXVsyXSxieXRlWzMyXVsyXVsyXSkpdm9pZCIKPT0KYm56IG1haW5fbDUKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMApwdXNoYnl0ZXMgMHgzOTBjYjQ3NiAvLyAidmVyaWZ5KGJ5dGVbMzJdWzFdLChieXRlWzMyXVsyXSxieXRlWzMyXVsyXVsyXSxieXRlWzMyXVsyXSkpYm9vbCIKPT0KYm56IG1haW5fbDQKZXJyCm1haW5fbDQ6CnR4biBPbkNvbXBsZXRpb24KaW50Y18wIC8vIE5vT3AKPT0KdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKIT0KJiYKYXNzZXJ0CnR4bmEgQXBwbGljYXRpb25BcmdzIDEKc3RvcmUgMAp0eG5hIEFwcGxpY2F0aW9uQXJncyAyCnN0b3JlIDEKbG9hZCAwCmxvYWQgMQpjYWxsc3ViIHZlcmlmeV8xMwpzdG9yZSAyCnB1c2hieXRlcyAweDE1MWY3Yzc1IC8vIDB4MTUxZjdjNzUKcHVzaGJ5dGVzIDB4MDAgLy8gMHgwMAppbnRjXzAgLy8gMApsb2FkIDIKc2V0Yml0CmNvbmNhdApsb2cKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDU6CnR4biBPbkNvbXBsZXRpb24KaW50Y18wIC8vIE5vT3AKPT0KdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKIT0KJiYKYXNzZXJ0CnR4bmEgQXBwbGljYXRpb25BcmdzIDEKY2FsbHN1YiBib290c3RyYXBfMTIKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDY6CnR4biBPbkNvbXBsZXRpb24KaW50Y18wIC8vIE5vT3AKPT0KYm56IG1haW5fbDEwCnR4biBPbkNvbXBsZXRpb24KcHVzaGludCA0IC8vIFVwZGF0ZUFwcGxpY2F0aW9uCj09CmJueiBtYWluX2w5CmVycgptYWluX2w5Ogp0eG4gQXBwbGljYXRpb25JRAppbnRjXzAgLy8gMAohPQphc3NlcnQKY2FsbHN1YiB1cGRhdGVfMTAKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDEwOgp0eG4gQXBwbGljYXRpb25JRAppbnRjXzAgLy8gMAo9PQphc3NlcnQKY2FsbHN1YiBjcmVhdGVfMAppbnRjXzEgLy8gMQpyZXR1cm4KCi8vIGNyZWF0ZQpjcmVhdGVfMDoKaW50Y18xIC8vIDEKcmV0dXJuCgovLyBhZGQKYWRkXzE6CmNhbGxzdWIgY3VydmVhZGRfNgpyZXRzdWIKCi8vIHNjYWxlCnNjYWxlXzI6CmNhbGxzdWIgY3VydmVzY2FsYXJtdWxfNwpyZXRzdWIKCi8vIG5lZ2F0ZQpuZWdhdGVfMzoKc3RvcmUgMjQKbG9hZCAyNApieXRlY18wIC8vIDB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAKYj09CmJueiBuZWdhdGVfM19sMgpsb2FkIDI0CmV4dHJhY3QgMCAzMgpieXRlY18xIC8vIDB4MzA2NDRlNzJlMTMxYTAyOWI4NTA0NWI2ODE4MTU4NWQ5NzgxNmE5MTY4NzFjYThkM2MyMDhjMTZkODdjZmQ0Nwpsb2FkIDI0CmV4dHJhY3QgMzIgMApieXRlY18xIC8vIDB4MzA2NDRlNzJlMTMxYTAyOWI4NTA0NWI2ODE4MTU4NWQ5NzgxNmE5MTY4NzFjYThkM2MyMDhjMTZkODdjZmQ0NwpiJQpiLQpjb25jYXQKYiBuZWdhdGVfM19sMwpuZWdhdGVfM19sMjoKbG9hZCAyNApuZWdhdGVfM19sMzoKcmV0c3ViCgovLyBjb21wdXRlX2xpbmVhcl9jb21iaW5hdGlvbgpjb21wdXRlbGluZWFyY29tYmluYXRpb25fNDoKc3RvcmUgMTIKc3RvcmUgMTEKYnl0ZWNfMCAvLyAweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwCnN0b3JlIDE0CmxvYWQgMTEKaW50Y18zIC8vIDQ0OApkaWcgMQpsZW4Kc3Vic3RyaW5nMwpzdG9yZSAxNQpwdXNoaW50IDIgLy8gMgppbnRjXzEgLy8gMQotCmludGNfMSAvLyAxCj09CmFzc2VydAppbnRjXzAgLy8gMApzdG9yZSAxNgpjb21wdXRlbGluZWFyY29tYmluYXRpb25fNF9sMToKbG9hZCAxNgppbnRjXzEgLy8gMQo8CmJ6IGNvbXB1dGVsaW5lYXJjb21iaW5hdGlvbl80X2wzCmxvYWQgMTIKcHVzaGludCAzMiAvLyAzMgpsb2FkIDE2CioKcHVzaGludCAzMiAvLyAzMgpleHRyYWN0MwpzdG9yZSAxNwpsb2FkIDE3CnB1c2hieXRlcyAweDMwNjQ0ZTcyZTEzMWEwMjliODUwNDViNjgxODE1ODVkMjgzM2U4NDg3OWI5NzA5MTQzZTFmNTkzZjAwMDAwMDEgLy8gMHgzMDY0NGU3MmUxMzFhMDI5Yjg1MDQ1YjY4MTgxNTg1ZDI4MzNlODQ4NzliOTcwOTE0M2UxZjU5M2YwMDAwMDAxCmI8Ci8vIGlucHV0ID49IHNuYXJrIHNjYWxhcgphc3NlcnQKbG9hZCAxMQppbnRjXzMgLy8gNDQ4CmRpZyAxCmxlbgpzdWJzdHJpbmczCmludGNfMiAvLyA2NApsb2FkIDE2CmludGNfMSAvLyAxCisKKgppbnRjXzIgLy8gNjQKZXh0cmFjdDMKbG9hZCAxNwpjYWxsc3ViIHNjYWxlXzIKc3RvcmUgMTMKbG9hZCAxNApsb2FkIDEzCmNhbGxzdWIgYWRkXzEKc3RvcmUgMTQKbG9hZCAxNgppbnRjXzEgLy8gMQorCnN0b3JlIDE2CmIgY29tcHV0ZWxpbmVhcmNvbWJpbmF0aW9uXzRfbDEKY29tcHV0ZWxpbmVhcmNvbWJpbmF0aW9uXzRfbDM6CmxvYWQgMTEKaW50Y18zIC8vIDQ0OApkaWcgMQpsZW4Kc3Vic3RyaW5nMwppbnRjXzIgLy8gNjQKaW50Y18wIC8vIDAKKgppbnRjXzIgLy8gNjQKZXh0cmFjdDMKc3RvcmUgMTgKbG9hZCAxNApsb2FkIDE4CmNhbGxzdWIgYWRkXzEKc3RvcmUgMTQKbG9hZCAxNApyZXRzdWIKCi8vIHZhbGlkX3BhaXJpbmcKdmFsaWRwYWlyaW5nXzU6CnN0b3JlIDIxCnN0b3JlIDIwCnN0b3JlIDE5CmxvYWQgMTkKZXh0cmFjdCAwIDY0CmNhbGxzdWIgbmVnYXRlXzMKbG9hZCAyMApleHRyYWN0IDAgNjQKY29uY2F0CmxvYWQgMjEKY29uY2F0CmxvYWQgMTkKZXh0cmFjdCAxOTIgMApjb25jYXQKc3RvcmUgMjIKbG9hZCAxOQpleHRyYWN0IDY0IDEyOApsb2FkIDIwCmV4dHJhY3QgNjQgMTI4CmNvbmNhdApsb2FkIDIwCmV4dHJhY3QgMTkyIDEyOApjb25jYXQKbG9hZCAyMApwdXNoaW50IDMyMCAvLyAzMjAKcHVzaGludCAxMjggLy8gMTI4CmV4dHJhY3QzCmNvbmNhdApzdG9yZSAyMwpsb2FkIDIyCmxvYWQgMjMKY2FsbHN1YiBjdXJ2ZXBhaXJpbmdfOApyZXRzdWIKCi8vIGN1cnZlX2FkZApjdXJ2ZWFkZF82OgplY19hZGQgQk4yNTRfRzEKcmV0c3ViCgovLyBjdXJ2ZV9zY2FsYXJfbXVsCmN1cnZlc2NhbGFybXVsXzc6CmVjX3NjYWxhcl9tdWwgQk4yNTRfRzEKcmV0c3ViCgovLyBjdXJ2ZV9wYWlyaW5nCmN1cnZlcGFpcmluZ184OgplY19wYWlyaW5nX2NoZWNrIEJOMjU0X0cxCnJldHN1YgoKLy8gYXV0aF9vbmx5CmF1dGhvbmx5Xzk6Cmdsb2JhbCBDcmVhdG9yQWRkcmVzcwo9PQpyZXRzdWIKCi8vIHVwZGF0ZQp1cGRhdGVfMTA6CnR4biBTZW5kZXIKY2FsbHN1YiBhdXRob25seV85Ci8vIHVuYXV0aG9yaXplZAphc3NlcnQKaW50Y18xIC8vIDEKcmV0dXJuCgovLyBhdXRoX29ubHkKYXV0aG9ubHlfMTE6Cmdsb2JhbCBDcmVhdG9yQWRkcmVzcwo9PQpyZXRzdWIKCi8vIGJvb3RzdHJhcApib290c3RyYXBfMTI6CnN0b3JlIDEwCnR4biBTZW5kZXIKY2FsbHN1YiBhdXRob25seV8xMQovLyB1bmF1dGhvcml6ZWQKYXNzZXJ0CmJ5dGVjXzIgLy8gInZrIgpsb2FkIDEwCmJveF9wdXQKcmV0c3ViCgovLyB2ZXJpZnkKdmVyaWZ5XzEzOgpzdG9yZSA0CnN0b3JlIDMKcHVzaGludCAxMzUwIC8vIDEzNTAKcHVzaGludCAxMCAvLyAxMAorCnN0b3JlIDUKdmVyaWZ5XzEzX2wxOgpsb2FkIDUKZ2xvYmFsIE9wY29kZUJ1ZGdldAo+CmJ6IHZlcmlmeV8xM19sMwppdHhuX2JlZ2luCnB1c2hpbnQgNiAvLyBhcHBsCml0eG5fZmllbGQgVHlwZUVudW0KcHVzaGludCA1IC8vIERlbGV0ZUFwcGxpY2F0aW9uCml0eG5fZmllbGQgT25Db21wbGV0aW9uCmJ5dGVjXzMgLy8gMHgwNjgxMDEKaXR4bl9maWVsZCBBcHByb3ZhbFByb2dyYW0KYnl0ZWNfMyAvLyAweDA2ODEwMQppdHhuX2ZpZWxkIENsZWFyU3RhdGVQcm9ncmFtCml0eG5fc3VibWl0CmIgdmVyaWZ5XzEzX2wxCnZlcmlmeV8xM19sMzoKYnl0ZWNfMiAvLyAidmsiCmJveF9nZXQKc3RvcmUgOApzdG9yZSA3CmxvYWQgOAovLyBWZXJpZmljYXRpb24gS2V5IG5vdCBzZXQKYXNzZXJ0CmxvYWQgNwpzdG9yZSA2CmxvYWQgNgpsb2FkIDMKY2FsbHN1YiBjb21wdXRlbGluZWFyY29tYmluYXRpb25fNApzdG9yZSA5CmxvYWQgNApsb2FkIDYKbG9hZCA5CmNhbGxzdWIgdmFsaWRwYWlyaW5nXzUKIQohCnJldHN1Yg==",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDkKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "schema": {
        "local": {
            "declared": {},
            "reserved": {}
        },
        "global": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "Verifier",
        "methods": [
            {
                "name": "bootstrap",
                "args": [
                    {
                        "type": "(byte[32][2],byte[32][2][2],byte[32][2][2],byte[32][2][2],byte[32][2][2])",
                        "name": "vk"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "verify",
                "args": [
                    {
                        "type": "byte[32][1]",
                        "name": "inputs"
                    },
                    {
                        "type": "(byte[32][2],byte[32][2][2],byte[32][2])",
                        "name": "proof"
                    }
                ],
                "returns": {
                    "type": "bool"
                }
            }
        ],
        "networks": {}
    }
}