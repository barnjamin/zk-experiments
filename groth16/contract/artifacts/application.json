{
    "hints": {
        "bootstrap": {
            "structs": {
                "vk": {
                    "name": "VerificationKey",
                    "elements": [
                        [
                            "alpha1",
                            "byte[48][2]"
                        ],
                        [
                            "beta2",
                            "byte[48][2][2]"
                        ],
                        [
                            "gamma2",
                            "byte[48][2][2]"
                        ],
                        [
                            "delta2",
                            "byte[48][2][2]"
                        ],
                        [
                            "IC",
                            "byte[48][2][2]"
                        ]
                    ]
                }
            }
        },
        "verify": {
            "structs": {
                "proof": {
                    "name": "Proof",
                    "elements": [
                        [
                            "A",
                            "byte[48][2]"
                        ],
                        [
                            "B",
                            "byte[48][2][2]"
                        ],
                        [
                            "C",
                            "byte[48][2]"
                        ]
                    ]
                }
            }
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDkKaW50Y2Jsb2NrIDAgMSAyODggMTkyCmJ5dGVjYmxvY2sgMHgxYTAxMTFlYTM5N2ZlNjlhNGIxYmE3YjY0MzRiYWNkNzY0Nzc0Yjg0ZjM4NTEyYmY2NzMwZDJhMGY2YjBmNjI0MWVhYmZmZmViMTUzZmZmZmI5ZmVmZmZmZmZmZmFhYWIgMHg3NjZiIDB4MDY4MTAxCnR4biBOdW1BcHBBcmdzCmludGNfMCAvLyAwCj09CmJueiBtYWluX2w2CnR4bmEgQXBwbGljYXRpb25BcmdzIDAKcHVzaGJ5dGVzIDB4MzM2M2QyZDcgLy8gImJvb3RzdHJhcCgoYnl0ZVs0OF1bMl0sYnl0ZVs0OF1bMl1bMl0sYnl0ZVs0OF1bMl1bMl0sYnl0ZVs0OF1bMl1bMl0sYnl0ZVs0OF1bMl1bMl0pKXZvaWQiCj09CmJueiBtYWluX2w1CnR4bmEgQXBwbGljYXRpb25BcmdzIDAKcHVzaGJ5dGVzIDB4OWM1NTBiNDMgLy8gInZlcmlmeShieXRlWzMyXVsxXSwoYnl0ZVs0OF1bMl0sYnl0ZVs0OF1bMl1bMl0sYnl0ZVs0OF1bMl0pKWJvb2wiCj09CmJueiBtYWluX2w0CmVycgptYWluX2w0Ogp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CiYmCmFzc2VydAp0eG5hIEFwcGxpY2F0aW9uQXJncyAxCnN0b3JlIDAKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMgpzdG9yZSAxCmxvYWQgMApsb2FkIDEKY2FsbHN1YiB2ZXJpZnlfMTEKc3RvcmUgMgpwdXNoYnl0ZXMgMHgxNTFmN2M3NSAvLyAweDE1MWY3Yzc1CnB1c2hieXRlcyAweDAwIC8vIDB4MDAKaW50Y18wIC8vIDAKbG9hZCAyCnNldGJpdApjb25jYXQKbG9nCmludGNfMSAvLyAxCnJldHVybgptYWluX2w1Ogp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CiYmCmFzc2VydAp0eG5hIEFwcGxpY2F0aW9uQXJncyAxCmNhbGxzdWIgYm9vdHN0cmFwXzEwCmludGNfMSAvLyAxCnJldHVybgptYWluX2w2Ogp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CmJueiBtYWluX2wxMAp0eG4gT25Db21wbGV0aW9uCnB1c2hpbnQgNCAvLyBVcGRhdGVBcHBsaWNhdGlvbgo9PQpibnogbWFpbl9sOQplcnIKbWFpbl9sOToKdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKIT0KYXNzZXJ0CmNhbGxzdWIgdXBkYXRlXzgKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDEwOgp0eG4gQXBwbGljYXRpb25JRAppbnRjXzAgLy8gMAo9PQphc3NlcnQKY2FsbHN1YiBjcmVhdGVfMAppbnRjXzEgLy8gMQpyZXR1cm4KCi8vIGNyZWF0ZQpjcmVhdGVfMDoKaW50Y18xIC8vIDEKcmV0dXJuCgovLyBuZWdhdGUKbmVnYXRlXzE6CnN0b3JlIDE5CmxvYWQgMTkKZXh0cmFjdCAwIDQ4CmJ5dGVjXzAgLy8gMHgxYTAxMTFlYTM5N2ZlNjlhNGIxYmE3YjY0MzRiYWNkNzY0Nzc0Yjg0ZjM4NTEyYmY2NzMwZDJhMGY2YjBmNjI0MWVhYmZmZmViMTUzZmZmZmI5ZmVmZmZmZmZmZmFhYWIKbG9hZCAxOQpleHRyYWN0IDQ4IDAKYnl0ZWNfMCAvLyAweDFhMDExMWVhMzk3ZmU2OWE0YjFiYTdiNjQzNGJhY2Q3NjQ3NzRiODRmMzg1MTJiZjY3MzBkMmEwZjZiMGY2MjQxZWFiZmZmZWIxNTNmZmZmYjlmZWZmZmZmZmZmYWFhYgpiJQpiLQpjb25jYXQKcmV0c3ViCgovLyBjb21wdXRlX2xpbmVhcl9jb21iaW5hdGlvbgpjb21wdXRlbGluZWFyY29tYmluYXRpb25fMjoKc3RvcmUgMTIKc3RvcmUgMTEKcHVzaGJ5dGVzIDB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwIC8vIDB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwCmxvYWQgMTEKcHVzaGludCA2NzIgLy8gNjcyCmRpZyAxCmxlbgpzdWJzdHJpbmczCnN0b3JlIDEzCmxvYWQgMTMKZXh0cmFjdCA5NiAwCmxvYWQgMTIKY2FsbHN1YiBjdXJ2ZW11bHRpZXhwXzUKbG9hZCAxMwpleHRyYWN0IDAgOTYKY2FsbHN1YiBjdXJ2ZWFkZF80CnJldHN1YgoKLy8gdmFsaWRfcGFpcmluZwp2YWxpZHBhaXJpbmdfMzoKc3RvcmUgMTYKc3RvcmUgMTUKc3RvcmUgMTQKbG9hZCAxNApleHRyYWN0IDAgOTYKY2FsbHN1YiBuZWdhdGVfMQpsb2FkIDE1CmV4dHJhY3QgMCA5Ngpjb25jYXQKbG9hZCAxNgpjb25jYXQKbG9hZCAxNAppbnRjXzIgLy8gMjg4CmRpZyAxCmxlbgpzdWJzdHJpbmczCmNvbmNhdApzdG9yZSAxNwpsb2FkIDE0CmV4dHJhY3QgOTYgMTkyCmxvYWQgMTUKZXh0cmFjdCA5NiAxOTIKY29uY2F0CmxvYWQgMTUKaW50Y18yIC8vIDI4OAppbnRjXzMgLy8gMTkyCmV4dHJhY3QzCmNvbmNhdApsb2FkIDE1CnB1c2hpbnQgNDgwIC8vIDQ4MAppbnRjXzMgLy8gMTkyCmV4dHJhY3QzCmNvbmNhdApzdG9yZSAxOApsb2FkIDE3CmxvYWQgMTgKY2FsbHN1YiBjdXJ2ZXBhaXJpbmdfNgpyZXRzdWIKCi8vIGN1cnZlX2FkZApjdXJ2ZWFkZF80OgplY19hZGQgQkxTMTJfMzgxX0cxCnJldHN1YgoKLy8gY3VydmVfbXVsdGlfZXhwCmN1cnZlbXVsdGlleHBfNToKZWNfbXVsdGlfZXhwIEJMUzEyXzM4MV9HMQpyZXRzdWIKCi8vIGN1cnZlX3BhaXJpbmcKY3VydmVwYWlyaW5nXzY6CmVjX3BhaXJpbmdfY2hlY2sgQkxTMTJfMzgxX0cxCnJldHN1YgoKLy8gYXV0aF9vbmx5CmF1dGhvbmx5Xzc6Cmdsb2JhbCBDcmVhdG9yQWRkcmVzcwo9PQpyZXRzdWIKCi8vIHVwZGF0ZQp1cGRhdGVfODoKdHhuIFNlbmRlcgpjYWxsc3ViIGF1dGhvbmx5XzcKLy8gdW5hdXRob3JpemVkCmFzc2VydAppbnRjXzEgLy8gMQpyZXR1cm4KCi8vIGF1dGhfb25seQphdXRob25seV85OgpnbG9iYWwgQ3JlYXRvckFkZHJlc3MKPT0KcmV0c3ViCgovLyBib290c3RyYXAKYm9vdHN0cmFwXzEwOgpzdG9yZSAxMAp0eG4gU2VuZGVyCmNhbGxzdWIgYXV0aG9ubHlfOQovLyB1bmF1dGhvcml6ZWQKYXNzZXJ0CmJ5dGVjXzEgLy8gInZrIgpsb2FkIDEwCmJveF9wdXQKcmV0c3ViCgovLyB2ZXJpZnkKdmVyaWZ5XzExOgpzdG9yZSA0CnN0b3JlIDMKcHVzaGludCAxMzUwMCAvLyAxMzUwMApwdXNoaW50IDEwIC8vIDEwCisKc3RvcmUgNQp2ZXJpZnlfMTFfbDE6CmxvYWQgNQpnbG9iYWwgT3Bjb2RlQnVkZ2V0Cj4KYnogdmVyaWZ5XzExX2wzCml0eG5fYmVnaW4KcHVzaGludCA2IC8vIGFwcGwKaXR4bl9maWVsZCBUeXBlRW51bQpwdXNoaW50IDUgLy8gRGVsZXRlQXBwbGljYXRpb24KaXR4bl9maWVsZCBPbkNvbXBsZXRpb24KYnl0ZWNfMiAvLyAweDA2ODEwMQppdHhuX2ZpZWxkIEFwcHJvdmFsUHJvZ3JhbQpieXRlY18yIC8vIDB4MDY4MTAxCml0eG5fZmllbGQgQ2xlYXJTdGF0ZVByb2dyYW0KaXR4bl9zdWJtaXQKYiB2ZXJpZnlfMTFfbDEKdmVyaWZ5XzExX2wzOgpieXRlY18xIC8vICJ2ayIKYm94X2dldApzdG9yZSA4CnN0b3JlIDcKbG9hZCA4Ci8vIFZlcmlmaWNhdGlvbiBLZXkgbm90IHNldAphc3NlcnQKbG9hZCA3CnN0b3JlIDYKbG9hZCA2CmxvYWQgMwpjYWxsc3ViIGNvbXB1dGVsaW5lYXJjb21iaW5hdGlvbl8yCnN0b3JlIDkKbG9hZCA0CmxvYWQgNgpsb2FkIDkKY2FsbHN1YiB2YWxpZHBhaXJpbmdfMwohCiEKcmV0c3Vi",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDkKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "schema": {
        "local": {
            "declared": {},
            "reserved": {}
        },
        "global": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "Verifier",
        "methods": [
            {
                "name": "bootstrap",
                "args": [
                    {
                        "type": "(byte[48][2],byte[48][2][2],byte[48][2][2],byte[48][2][2],byte[48][2][2])",
                        "name": "vk"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "verify",
                "args": [
                    {
                        "type": "byte[32][1]",
                        "name": "inputs"
                    },
                    {
                        "type": "(byte[48][2],byte[48][2][2],byte[48][2])",
                        "name": "proof"
                    }
                ],
                "returns": {
                    "type": "bool"
                }
            }
        ],
        "networks": {}
    }
}