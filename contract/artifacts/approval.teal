#pragma version 8
intcblock 0 32 1 64 448
bytecblock 0x766b 0x151f7c75
txn NumAppArgs
intc_0 // 0
==
bnz main_l8
txna ApplicationArgs 0
pushbytes 0x03b68e2f // "bootstrap(((byte[32],byte[32]),(byte[32][2],byte[32][2]),(byte[32][2],byte[32][2]),(byte[32][2],byte[32][2]),(byte[32],byte[32])[2]))void"
==
bnz main_l7
txna ApplicationArgs 0
pushbytes 0x6d895cc4 // "verify(byte[32][],((byte[32],byte[32]),(byte[32][2],byte[32][2]),(byte[32],byte[32])))bool"
==
bnz main_l6
txna ApplicationArgs 0
pushbytes 0xccdb95e1 // "get_vk()((byte[32],byte[32]),(byte[32][2],byte[32][2]),(byte[32][2],byte[32][2]),(byte[32][2],byte[32][2]),(byte[32],byte[32])[2])"
==
bnz main_l5
err
main_l5:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub getvk_11
store 31
bytec_1 // 0x151f7c75
load 31
concat
log
intc_2 // 1
return
main_l6:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
store 0
txna ApplicationArgs 2
store 1
load 0
load 1
callsub verify_10
store 2
bytec_1 // 0x151f7c75
pushbytes 0x00 // 0x00
intc_0 // 0
load 2
setbit
concat
log
intc_2 // 1
return
main_l7:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
callsub bootstrap_9
intc_2 // 1
return
main_l8:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l10
err
main_l10:
txn ApplicationID
intc_0 // 0
==
assert
callsub create_0
intc_2 // 1
return

// create
create_0:
intc_2 // 1
return

// check_proof_values
checkproofvalues_1:
store 35
intc_2 // 1
retsub

// compute_linear_combination
computelinearcombination_2:
store 10
store 9
intc_1 // 32
bzero
store 14
intc_1 // 32
load 14
len
==
assert
intc_1 // 32
bzero
store 15
intc_1 // 32
load 15
len
==
assert
load 14
load 15
concat
store 11
intc_0 // 0
store 16
computelinearcombination_2_l1:
load 16
load 10
intc_0 // 0
extract_uint16
<
bz computelinearcombination_2_l3
load 10
intc_1 // 32
load 16
*
pushint 2 // 2
+
intc_1 // 32
extract3
pushbytes 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001 // 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001
b<
// verifier gte snark scalar
assert
load 9
intc 4 // 448
dig 1
len
substring3
intc_3 // 64
load 16
intc_2 // 1
+
*
intc_3 // 64
extract3
store 17
load 10
intc_1 // 32
load 16
*
pushint 2 // 2
+
intc_1 // 32
extract3
store 18
load 17
load 18
callsub scale_7
store 12
load 11
load 12
callsub add_6
store 11
load 16
intc_2 // 1
+
store 16
b computelinearcombination_2_l1
computelinearcombination_2_l3:
load 9
intc 4 // 448
dig 1
len
substring3
intc_3 // 64
intc_0 // 0
*
intc_3 // 64
extract3
store 13
load 11
load 13
callsub add_6
store 11
load 11
retsub

// valid_pairing
validpairing_3:
store 38
store 37
store 36
intc_2 // 1
retsub

// curve_add
curveadd_4:
bn256_add
retsub

// curve_scalar_mul
curvescalarmul_5:
bn256_scalar_mul
retsub

// add
add_6:
store 24
store 23
load 23
extract 0 32
store 27
load 24
extract 0 32
store 28
load 27
load 28
callsub curveadd_4
store 25
intc_1 // 32
load 25
len
==
assert
load 23
extract 32 0
store 29
load 24
extract 32 0
store 30
load 29
load 30
callsub curveadd_4
store 26
intc_1 // 32
load 26
len
==
assert
load 25
load 26
concat
retsub

// scale
scale_7:
store 20
store 19
load 19
extract 0 32
load 20
callsub curvescalarmul_5
store 21
intc_1 // 32
load 21
len
==
assert
load 19
extract 32 0
load 20
callsub curvescalarmul_5
store 22
intc_1 // 32
load 22
len
==
assert
load 21
load 22
concat
retsub

// auth_only
authonly_8:
global CreatorAddress
==
retsub

// bootstrap
bootstrap_9:
store 34
txn Sender
callsub authonly_8
// unauthorized
assert
bytec_0 // "vk"
load 34
box_put
retsub

// verify
verify_10:
store 4
store 3
load 4
callsub checkproofvalues_1
// A value in the proof was > PrimeQ
assert
bytec_0 // "vk"
box_get
store 7
store 6
load 7
// Verification Key not set
assert
load 6
store 5
load 5
load 3
callsub computelinearcombination_2
store 8
load 4
load 5
load 8
callsub validpairing_3
!
!
retsub

// get_vk
getvk_11:
bytec_0 // "vk"
box_get
store 33
store 32
load 33
// Verification Key not set
assert
load 32
retsub