{
    "hints": {
        "bootstrap": {
            "structs": {
                "vk": {
                    "name": "VerificationKey",
                    "elements": [
                        [
                            "alpha1",
                            "byte[32][2]"
                        ],
                        [
                            "beta2",
                            "byte[32][2][2]"
                        ],
                        [
                            "gamma2",
                            "byte[32][2][2]"
                        ],
                        [
                            "delta2",
                            "byte[32][2][2]"
                        ],
                        [
                            "IC",
                            "byte[32][2][2]"
                        ]
                    ]
                }
            }
        },
        "verify": {
            "structs": {
                "proof": {
                    "name": "Proof",
                    "elements": [
                        [
                            "A",
                            "byte[32][2]"
                        ],
                        [
                            "B",
                            "byte[32][2][2]"
                        ],
                        [
                            "C",
                            "byte[32][2]"
                        ]
                    ]
                }
            }
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDgKaW50Y2Jsb2NrIDAgMSA2NCAzMiA0NDgKYnl0ZWNibG9jayAweDc2NmIgMHgxNTFmN2M3NSAweAp0eG4gTnVtQXBwQXJncwppbnRjXzAgLy8gMAo9PQpibnogbWFpbl9sOAp0eG5hIEFwcGxpY2F0aW9uQXJncyAwCnB1c2hieXRlcyAweDc5M2FlNDRkIC8vICJib290c3RyYXAoKGJ5dGVbMzJdWzJdLGJ5dGVbMzJdWzJdWzJdLGJ5dGVbMzJdWzJdWzJdLGJ5dGVbMzJdWzJdWzJdLGJ5dGVbMzJdWzJdWzJdKSl2b2lkIgo9PQpibnogbWFpbl9sNwp0eG5hIEFwcGxpY2F0aW9uQXJncyAwCnB1c2hieXRlcyAweDhiNzM3MWRhIC8vICJ2ZXJpZnkoYnl0ZVszMl1bXSwoYnl0ZVszMl1bMl0sYnl0ZVszMl1bMl1bMl0sYnl0ZVszMl1bMl0pKWJvb2wiCj09CmJueiBtYWluX2w2CnR4bmEgQXBwbGljYXRpb25BcmdzIDAKcHVzaGJ5dGVzIDB4NTljM2IwYTcgLy8gImdldF92aygpKGJ5dGVbMzJdWzJdLGJ5dGVbMzJdWzJdWzJdLGJ5dGVbMzJdWzJdWzJdLGJ5dGVbMzJdWzJdWzJdLGJ5dGVbMzJdWzJdWzJdKSIKPT0KYm56IG1haW5fbDUKZXJyCm1haW5fbDU6CnR4biBPbkNvbXBsZXRpb24KaW50Y18wIC8vIE5vT3AKPT0KdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKIT0KJiYKYXNzZXJ0CmNhbGxzdWIgZ2V0dmtfMTEKc3RvcmUgMTYKYnl0ZWNfMSAvLyAweDE1MWY3Yzc1CmxvYWQgMTYKY29uY2F0CmxvZwppbnRjXzEgLy8gMQpyZXR1cm4KbWFpbl9sNjoKdHhuIE9uQ29tcGxldGlvbgppbnRjXzAgLy8gTm9PcAo9PQp0eG4gQXBwbGljYXRpb25JRAppbnRjXzAgLy8gMAohPQomJgphc3NlcnQKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQpzdG9yZSAwCnR4bmEgQXBwbGljYXRpb25BcmdzIDIKc3RvcmUgMQpsb2FkIDAKbG9hZCAxCmNhbGxzdWIgdmVyaWZ5XzEwCnN0b3JlIDIKYnl0ZWNfMSAvLyAweDE1MWY3Yzc1CnB1c2hieXRlcyAweDAwIC8vIDB4MDAKaW50Y18wIC8vIDAKbG9hZCAyCnNldGJpdApjb25jYXQKbG9nCmludGNfMSAvLyAxCnJldHVybgptYWluX2w3Ogp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CiYmCmFzc2VydAp0eG5hIEFwcGxpY2F0aW9uQXJncyAxCmNhbGxzdWIgYm9vdHN0cmFwXzkKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDg6CnR4biBPbkNvbXBsZXRpb24KaW50Y18wIC8vIE5vT3AKPT0KYm56IG1haW5fbDEwCmVycgptYWluX2wxMDoKdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKPT0KYXNzZXJ0CmNhbGxzdWIgY3JlYXRlXzAKaW50Y18xIC8vIDEKcmV0dXJuCgovLyBjcmVhdGUKY3JlYXRlXzA6CmludGNfMSAvLyAxCnJldHVybgoKLy8gYWRkCmFkZF8xOgpjYWxsc3ViIGN1cnZlYWRkXzYKcmV0c3ViCgovLyBzY2FsZQpzY2FsZV8yOgpjYWxsc3ViIGN1cnZlc2NhbGFybXVsXzcKcmV0c3ViCgovLyBjaGVja19wcm9vZl92YWx1ZXMKY2hlY2twcm9vZnZhbHVlc18zOgpzdG9yZSAyMAppbnRjXzEgLy8gMQpyZXRzdWIKCi8vIGNvbXB1dGVfbGluZWFyX2NvbWJpbmF0aW9uCmNvbXB1dGVsaW5lYXJjb21iaW5hdGlvbl80OgpzdG9yZSAxMApzdG9yZSA5CnB1c2hieXRlcyAweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwIC8vIDB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAKc3RvcmUgMTEKaW50Y18wIC8vIDAKc3RvcmUgMTMKY29tcHV0ZWxpbmVhcmNvbWJpbmF0aW9uXzRfbDE6CmxvYWQgMTMKbG9hZCAxMAppbnRjXzAgLy8gMApleHRyYWN0X3VpbnQxNgo8CmJ6IGNvbXB1dGVsaW5lYXJjb21iaW5hdGlvbl80X2wzCmxvYWQgMTAKaW50Y18zIC8vIDMyCmxvYWQgMTMKKgpwdXNoaW50IDIgLy8gMgorCmludGNfMyAvLyAzMgpleHRyYWN0MwpzdG9yZSAxNApsb2FkIDE0CnB1c2hieXRlcyAweDMwNjQ0ZTcyZTEzMWEwMjliODUwNDViNjgxODE1ODVkMjgzM2U4NDg3OWI5NzA5MTQzZTFmNTkzZjAwMDAwMDEgLy8gMHgzMDY0NGU3MmUxMzFhMDI5Yjg1MDQ1YjY4MTgxNTg1ZDI4MzNlODQ4NzliOTcwOTE0M2UxZjU5M2YwMDAwMDAxCmI8Ci8vIHZlcmlmaWVyIGd0ZSBzbmFyayBzY2FsYXIKYXNzZXJ0CmxvYWQgOQppbnRjIDQgLy8gNDQ4CmRpZyAxCmxlbgpzdWJzdHJpbmczCmludGNfMiAvLyA2NApsb2FkIDEzCmludGNfMSAvLyAxCisKKgppbnRjXzIgLy8gNjQKZXh0cmFjdDMKbG9hZCAxNApjYWxsc3ViIHNjYWxlXzIKc3RvcmUgMTIKbG9hZCAxMQpsb2FkIDEyCmNhbGxzdWIgYWRkXzEKc3RvcmUgMTEKbG9hZCAxMwppbnRjXzEgLy8gMQorCnN0b3JlIDEzCmIgY29tcHV0ZWxpbmVhcmNvbWJpbmF0aW9uXzRfbDEKY29tcHV0ZWxpbmVhcmNvbWJpbmF0aW9uXzRfbDM6CmxvYWQgOQppbnRjIDQgLy8gNDQ4CmRpZyAxCmxlbgpzdWJzdHJpbmczCmludGNfMiAvLyA2NAppbnRjXzAgLy8gMAoqCmludGNfMiAvLyA2NApleHRyYWN0MwpzdG9yZSAxNQpsb2FkIDExCmxvYWQgMTUKY2FsbHN1YiBhZGRfMQpzdG9yZSAxMQpsb2FkIDExCnJldHN1YgoKLy8gdmFsaWRfcGFpcmluZwp2YWxpZHBhaXJpbmdfNToKc3RvcmUgMjMKc3RvcmUgMjIKc3RvcmUgMjEKYnl0ZWNfMiAvLyAiIgpzdG9yZSAyNApieXRlY18yIC8vICIiCnN0b3JlIDI1CmludGNfMSAvLyAxCnJldHN1YgoKLy8gY3VydmVfYWRkCmN1cnZlYWRkXzY6CmVjX2FkZApyZXRzdWIKCi8vIGN1cnZlX3NjYWxhcl9tdWwKY3VydmVzY2FsYXJtdWxfNzoKZWNfc2NhbGFyX211bApyZXRzdWIKCi8vIGF1dGhfb25seQphdXRob25seV84OgpnbG9iYWwgQ3JlYXRvckFkZHJlc3MKPT0KcmV0c3ViCgovLyBib290c3RyYXAKYm9vdHN0cmFwXzk6CnN0b3JlIDE5CnR4biBTZW5kZXIKY2FsbHN1YiBhdXRob25seV84Ci8vIHVuYXV0aG9yaXplZAphc3NlcnQKYnl0ZWNfMCAvLyAidmsiCmxvYWQgMTkKYm94X3B1dApyZXRzdWIKCi8vIHZlcmlmeQp2ZXJpZnlfMTA6CnN0b3JlIDQKc3RvcmUgMwpsb2FkIDQKY2FsbHN1YiBjaGVja3Byb29mdmFsdWVzXzMKLy8gQSB2YWx1ZSBpbiB0aGUgcHJvb2Ygd2FzID4gUHJpbWVRCmFzc2VydApieXRlY18wIC8vICJ2ayIKYm94X2dldApzdG9yZSA3CnN0b3JlIDYKbG9hZCA3Ci8vIFZlcmlmaWNhdGlvbiBLZXkgbm90IHNldAphc3NlcnQKbG9hZCA2CnN0b3JlIDUKbG9hZCA1CmxvYWQgMwpjYWxsc3ViIGNvbXB1dGVsaW5lYXJjb21iaW5hdGlvbl80CnN0b3JlIDgKbG9hZCA0CmxvYWQgNQpsb2FkIDgKY2FsbHN1YiB2YWxpZHBhaXJpbmdfNQohCiEKcmV0c3ViCgovLyBnZXRfdmsKZ2V0dmtfMTE6CmJ5dGVjXzAgLy8gInZrIgpib3hfZ2V0CnN0b3JlIDE4CnN0b3JlIDE3CmxvYWQgMTgKLy8gVmVyaWZpY2F0aW9uIEtleSBub3Qgc2V0CmFzc2VydApsb2FkIDE3CnJldHN1Yg==",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "schema": {
        "local": {
            "declared": {},
            "reserved": {}
        },
        "global": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "Verifier",
        "methods": [
            {
                "name": "bootstrap",
                "args": [
                    {
                        "type": "(byte[32][2],byte[32][2][2],byte[32][2][2],byte[32][2][2],byte[32][2][2])",
                        "name": "vk"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "verify",
                "args": [
                    {
                        "type": "byte[32][]",
                        "name": "inputs"
                    },
                    {
                        "type": "(byte[32][2],byte[32][2][2],byte[32][2])",
                        "name": "proof"
                    }
                ],
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "get_vk",
                "args": [],
                "returns": {
                    "type": "(byte[32][2],byte[32][2][2],byte[32][2][2],byte[32][2][2],byte[32][2][2])"
                }
            }
        ],
        "networks": {}
    }
}