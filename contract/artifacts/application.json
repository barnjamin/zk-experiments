{
    "hints": {
        "bootstrap": {
            "structs": {
                "vk": {
                    "name": "VerificationKey",
                    "elements": [
                        [
                            "alpha1",
                            "byte[32][2]"
                        ],
                        [
                            "beta2",
                            "byte[32][2][2]"
                        ],
                        [
                            "gamma2",
                            "byte[32][2][2]"
                        ],
                        [
                            "delta2",
                            "byte[32][2][2]"
                        ],
                        [
                            "IC",
                            "byte[32][2][2]"
                        ]
                    ]
                }
            }
        },
        "verify": {
            "structs": {
                "proof": {
                    "name": "Proof",
                    "elements": [
                        [
                            "A",
                            "byte[32][2]"
                        ],
                        [
                            "B",
                            "byte[32][2][2]"
                        ],
                        [
                            "C",
                            "byte[32][2]"
                        ]
                    ]
                }
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "schema": {
        "local": {
            "declared": {},
            "reserved": {}
        },
        "global": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "Verifier",
        "methods": [
            {
                "name": "bootstrap",
                "args": [
                    {
                        "type": "(byte[32][2],byte[32][2][2],byte[32][2][2],byte[32][2][2],byte[32][2][2])",
                        "name": "vk"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "verify",
                "args": [
                    {
                        "type": "byte[32][1]",
                        "name": "inputs"
                    },
                    {
                        "type": "(byte[32][2],byte[32][2][2],byte[32][2])",
                        "name": "proof"
                    }
                ],
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "get_vk",
                "args": [],
                "returns": {
                    "type": "(byte[32][2],byte[32][2][2],byte[32][2][2],byte[32][2][2],byte[32][2][2])"
                }
            }
        ],
        "networks": {}
    }
}